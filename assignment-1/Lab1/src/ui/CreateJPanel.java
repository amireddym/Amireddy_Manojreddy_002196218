/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.Person;

/**
 *
 * @author manojreddy
 */
public class CreateJPanel extends javax.swing.JPanel {

    private Person person;
    
    /**
     * Creates new form CreateJPanel
     */
    public CreateJPanel(Person person) {
        initComponents();
        this.person = person;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createJLabel = new javax.swing.JLabel();
        SaveBtn = new javax.swing.JButton();
        photoLabel = new javax.swing.JLabel();
        uploadJBtn = new javax.swing.JButton();
        deviceIdentityJLabel = new javax.swing.JLabel();
        linkedInJLabel = new javax.swing.JLabel();
        ipAddressJLabel = new javax.swing.JLabel();
        uniqueIdentityJLabel = new javax.swing.JLabel();
        biometricsJLabel1 = new javax.swing.JLabel();
        nameJLabel = new javax.swing.JLabel();
        telephoneNoSecJLabel = new javax.swing.JLabel();
        telephoneNoSecTextField = new javax.swing.JTextField();
        emailAddressSecJLabel = new javax.swing.JLabel();
        emailTextSecField = new javax.swing.JTextField();
        bankAccountNoSecJLabel = new javax.swing.JLabel();
        bankAccountNoSecTextField = new javax.swing.JTextField();
        geographicDataJLabel = new javax.swing.JLabel();
        dobJLabel = new javax.swing.JLabel();
        licenseNoTextField = new javax.swing.JTextField();
        telephoneNoJLabel = new javax.swing.JLabel();
        vehicleIdentityTextField = new javax.swing.JTextField();
        faxNoJLabel = new javax.swing.JLabel();
        medicalRecordJLabel = new javax.swing.JLabel();
        emailAddressJLabel = new javax.swing.JLabel();
        deviceIdentityTextField = new javax.swing.JTextField();
        ssnJLabel = new javax.swing.JLabel();
        healthPlanJLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        linkedInTextField = new javax.swing.JTextField();
        geographicDataTextField = new javax.swing.JTextField();
        bankAccountNoJLabel = new javax.swing.JLabel();
        ipAddressTextField = new javax.swing.JTextField();
        licenseNoJLabel = new javax.swing.JLabel();
        uniqueIdentityTextField = new javax.swing.JTextField();
        dobTextField = new javax.swing.JTextField();
        telephoneNoTextField = new javax.swing.JTextField();
        faxNoTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        ssnTextField = new javax.swing.JTextField();
        medicalRecordTextField = new javax.swing.JTextField();
        healthPlanTextField = new javax.swing.JTextField();
        bankAccountNoTextField = new javax.swing.JTextField();
        vehicleIdentityJLabel = new javax.swing.JLabel();
        biometricsTextField = new javax.swing.JTextField();

        createJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        createJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        createJLabel.setText("Create Person");

        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        uploadJBtn.setText("Upload");
        uploadJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadJBtnActionPerformed(evt);
            }
        });

        deviceIdentityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        deviceIdentityJLabel.setText("Device Identity :");

        linkedInJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        linkedInJLabel.setText("LinkedIn :");

        ipAddressJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ipAddressJLabel.setText("Ip Address :");

        uniqueIdentityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        uniqueIdentityJLabel.setText("Unique Identity :");

        biometricsJLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        biometricsJLabel1.setText("BioMetrics :");

        nameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameJLabel.setText("Name :");

        telephoneNoSecJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        telephoneNoSecJLabel.setText("Telephone No(Sec):");

        telephoneNoSecTextField.setToolTipText("10 digit number only (Optional)");
        telephoneNoSecTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telephoneNoSecTextFieldKeyReleased(evt);
            }
        });

        emailAddressSecJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailAddressSecJLabel.setText("Email Address(Sec) :");

        emailTextSecField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailTextSecFieldKeyReleased(evt);
            }
        });

        bankAccountNoSecJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bankAccountNoSecJLabel.setText("Bank Account(Sec) :");

        bankAccountNoSecTextField.setToolTipText("Only Numbers Accepted (Optional)");
        bankAccountNoSecTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bankAccountNoSecTextFieldKeyReleased(evt);
            }
        });

        geographicDataJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        geographicDataJLabel.setText("Geographic Data :");

        dobJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dobJLabel.setText("Date of Birth :");

        licenseNoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                licenseNoTextFieldKeyReleased(evt);
            }
        });

        telephoneNoJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        telephoneNoJLabel.setText("Telephone No(Pri):");

        vehicleIdentityTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vehicleIdentityTextFieldKeyReleased(evt);
            }
        });

        faxNoJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        faxNoJLabel.setText("FAX No  :");

        medicalRecordJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        medicalRecordJLabel.setText("Medical Record No :");

        emailAddressJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        emailAddressJLabel.setText("Email Address(Pri) :");

        deviceIdentityTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deviceIdentityTextFieldKeyReleased(evt);
            }
        });

        ssnJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ssnJLabel.setText("SSN :");

        healthPlanJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        healthPlanJLabel.setText("Health Plan No :");

        nameTextField.setToolTipText("Only Alphabets and Spaces");
        nameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTextFieldKeyReleased(evt);
            }
        });

        linkedInTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                linkedInTextFieldKeyReleased(evt);
            }
        });

        geographicDataTextField.setToolTipText("Input Complete Address");
        geographicDataTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                geographicDataTextFieldKeyReleased(evt);
            }
        });

        bankAccountNoJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bankAccountNoJLabel.setText("Bank Account(Pri) :");

        ipAddressTextField.setToolTipText("xxx.xxx.xxx.xxx format only");
        ipAddressTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ipAddressTextFieldKeyReleased(evt);
            }
        });

        licenseNoJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        licenseNoJLabel.setText("License No :");

        uniqueIdentityTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uniqueIdentityTextFieldKeyReleased(evt);
            }
        });

        dobTextField.setToolTipText("dd/MM/yyyy  Format Only");
        dobTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dobTextFieldKeyReleased(evt);
            }
        });

        telephoneNoTextField.setToolTipText("10 digit number only");
        telephoneNoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                telephoneNoTextFieldKeyReleased(evt);
            }
        });

        faxNoTextField.setToolTipText("10 digit number only");
        faxNoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                faxNoTextFieldKeyReleased(evt);
            }
        });

        emailTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailTextFieldKeyReleased(evt);
            }
        });

        ssnTextField.setToolTipText("xxx-xx-xxxx Format");
        ssnTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ssnTextFieldKeyReleased(evt);
            }
        });

        medicalRecordTextField.setToolTipText("Only Numbers Accepted");
        medicalRecordTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                medicalRecordTextFieldKeyReleased(evt);
            }
        });

        healthPlanTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                healthPlanTextFieldKeyReleased(evt);
            }
        });

        bankAccountNoTextField.setToolTipText("Only numbers accepted");
        bankAccountNoTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bankAccountNoTextFieldKeyReleased(evt);
            }
        });

        vehicleIdentityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vehicleIdentityJLabel.setText("Vehicle Identity :");

        biometricsTextField.setToolTipText("make sure file exists");
        biometricsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                biometricsTextFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(createJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(uploadJBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(geographicDataJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nameJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dobJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(telephoneNoJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailAddressJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ssnJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(medicalRecordJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(telephoneNoSecJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailAddressSecJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(healthPlanJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(geographicDataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ssnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(medicalRecordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(telephoneNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(telephoneNoSecTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailTextSecField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(healthPlanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(99, 99, 99)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bankAccountNoJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(licenseNoJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(vehicleIdentityJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(deviceIdentityJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(linkedInJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ipAddressJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(uniqueIdentityJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(biometricsJLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(faxNoJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bankAccountNoSecJLabel))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(faxNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bankAccountNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(licenseNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vehicleIdentityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deviceIdentityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(linkedInTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ipAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(uniqueIdentityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(biometricsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bankAccountNoSecTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(520, 520, 520)
                        .addComponent(SaveBtn)))
                .addContainerGap(164, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(photoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(createJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(geographicDataJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(geographicDataTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bankAccountNoSecJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dobJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(telephoneNoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telephoneNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(telephoneNoSecJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailAddressJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(emailAddressSecJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(medicalRecordJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(medicalRecordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(licenseNoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(faxNoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(healthPlanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(healthPlanJLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bankAccountNoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bankAccountNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bankAccountNoSecTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vehicleIdentityJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(vehicleIdentityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deviceIdentityJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deviceIdentityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(linkedInJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(linkedInTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telephoneNoSecTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ipAddressJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ipAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(uniqueIdentityJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uniqueIdentityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailTextSecField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(licenseNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(faxNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ssnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(biometricsJLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ssnJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(biometricsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadJBtn)
                .addGap(18, 18, 18)
                .addComponent(SaveBtn)
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void setValuesToPerson(){
        
        person.setName(nameTextField.getText());
        person.setGeographicData(geographicDataTextField.getText());
        person.setDob(getDateFromString(dobTextField.getText()));
        person.setTelephoneNo(Long.valueOf(telephoneNoTextField.getText()));
        person.setTelephoneNoSec(telephoneNoSecTextField.getText().isBlank()?0:Long.valueOf(telephoneNoSecTextField.getText()));
        person.setFaxNo(Long.valueOf(faxNoTextField.getText()));
        person.setEmailId(emailTextField.getText());
        person.setEmailIdSec(emailTextSecField.getText());
        person.setSsn(ssnTextField.getText());
        person.setMedicalRecordNo(Long.valueOf(medicalRecordTextField.getText()));
        person.setHealthPlanBenficiaryNo(Long.valueOf(healthPlanTextField.getText()));
        person.setBankAccountNo(Long.valueOf(bankAccountNoTextField.getText()));
        person.setBankAccountNoSec(bankAccountNoSecTextField.getText().isBlank()?0:Long.valueOf(bankAccountNoSecTextField.getText()));
        person.setLicenseNo(Long.valueOf(licenseNoTextField.getText()));
        person.setVehicleIdentifier(vehicleIdentityTextField.getText());
        person.setDeviceIdentifier(deviceIdentityTextField.getText());
        person.setLinkedIn(linkedInTextField.getText());
        person.setIpAddress(ipAddressTextField.getText());
        person.setBiometric(biometricsTextField.getText());
        person.setUniqueNo(uniqueIdentityTextField.getText());
        
    }
    
    private Date getDateFromString(String dob){
        
        Date date = null;
        try {
           date = new SimpleDateFormat("dd/MM/yyyy").parse(dob);
        }catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println("Not able to Parse Dob String");
        }
        return date;
    }
    
    private boolean isDataValid(){
        
        System.out.println("Name Validation : " + isNameValid());
        System.out.println("Dob Validation : " + isDobValid());
        System.out.println("Telephone Validation : " + isTelephoneNoValid());
        System.out.println("Telephone Validation Sec : " + isTelephoneNoSecValid());
        System.out.println("FaxNo validation : " + isFaxNoValid());
        System.out.println("Email Validation : " + isEmailIdValid());
        System.out.println("Email Validation Sec : " + isEmailIdSecValid());
        System.out.println("SSN validation : " + isSsnValid());
        System.out.println("Medical Validation : " + isMedicalRecordNoValid());
        System.out.println("Health Plan Validation : " + isHealthPlanBenificaryNoValid());
        System.out.println("Bank Account Validation : " + isBankAccountNoValid());
        System.out.println("Bank Account Validation : " + isBankAccountNoSecValid());
        System.out.println("Vehicle Identity Validation : " + isVehicleIdentifierValid());
        System.out.println("Device Identity Validation : " + isDeviceIdentifierValid());
        System.out.println("LinkedIn Validation : " + isLinkedInValid());
        System.out.println("Ip Address Validation : " + isIpAddressValid());
        System.out.println("Biometric Validation : " + isBiometricValid());
        System.out.println("UniqueIdentity Validation : " + isUniqueIdentityValid());
        
        
        nameTextFieldKeyReleased(null);
        dobTextFieldKeyReleased(null);
        telephoneNoTextFieldKeyReleased(null);
        telephoneNoSecTextFieldKeyReleased(null);
        faxNoTextFieldKeyReleased(null);
        emailTextFieldKeyReleased(null);
        emailTextSecFieldKeyReleased(null);
        ssnTextFieldKeyReleased(null);
        medicalRecordTextFieldKeyReleased(null);
        healthPlanTextFieldKeyReleased(null);
        bankAccountNoTextFieldKeyReleased(null);
        bankAccountNoSecTextFieldKeyReleased(null);
        vehicleIdentityTextFieldKeyReleased(null);
        deviceIdentityTextFieldKeyReleased(null);
        ipAddressTextFieldKeyReleased(null);
        biometricsTextFieldKeyReleased(null);
        licenseNoTextFieldKeyReleased(null);
        linkedInTextFieldKeyReleased(null);
        uniqueIdentityTextFieldKeyReleased(null);
                
        if( isNameValid() && isDobValid() && isTelephoneNoValid() && isTelephoneNoSecValid() && 
                isFaxNoValid() && isEmailIdValid() && isEmailIdSecValid() && isSsnValid() &&
                isMedicalRecordNoValid() && isHealthPlanBenificaryNoValid() && isBankAccountNoValid() &&
                isVehicleIdentifierValid() && isDeviceIdentifierValid() && isLinkedInValid() &&
                isIpAddressValid() && isBiometricValid() && isBankAccountNoSecValid() && isUniqueIdentityValid()) {
            
            return true;
        }
        return false;
    }
    
    private boolean isBiometricValid() {
        
        File file = new File(biometricsTextField.getText());
        if(file.exists()){
            return true;
        }
        return false;
    }
    
    private boolean isIpAddressValid() {
        String ipAddress = ipAddressTextField.getText();
        System.out.println(ipAddress);
        ipAddress = ipAddress.replaceAll(" ", "");
        if(ipAddress.length()!=15 || ipAddress.contentEquals("000.000.000.000")){
            return false;
        }
        String[] ipAddressSplit  = ipAddress.split("\\.");
        System.out.println(ipAddressSplit.length);
        if(ipAddressSplit.length == 4) {
            
            try {
                int ip1 = Integer.parseInt(ipAddressSplit[0]);
                int ip2 = Integer.parseInt(ipAddressSplit[1]);
                int ip3 = Integer.parseInt(ipAddressSplit[2]);
                int ip4 = Integer.parseInt(ipAddressSplit[3]);
                
                System.err.println(ip1);
                System.err.println(ip2);
                System.err.println(ip3);
                System.err.println(ip4);
                
                
                if(ip1> 255 || ip2 > 255 || ip3 > 255 || ip4 > 255){
                    return false;
                }
                return true;
                     
            }catch (Exception e) {
                return false;
            }
            
        }
        return false;
    }
    
    private boolean isLinkedInValid() {
        
        if(linkedInTextField.getText().isBlank()){
            return false;
        }
        
        return linkedInTextField.getText().matches("^[A-Za-z0-9]+[A-Za-z0-9 ._-]+$");
    }
    
    private boolean isDeviceIdentifierValid() {
        
        String deviceIdentifier = deviceIdentityTextField.getText();
        if(deviceIdentifier.isBlank()){
            return false;
        }
        
        return deviceIdentityTextField.getText().matches("^[A-Za-z0-9]+[A-Za-z0-9]+$");
    }
    
    private boolean isVehicleIdentifierValid() {
        
        String vehicleIndetifier = vehicleIdentityTextField.getText();
        if(vehicleIndetifier.isBlank()){
            return false;
        }
        String vehicleIdentifierRegex = "^[A-Z0-9]+[A-Z0-9 ]+$";
        return vehicleIndetifier.matches(vehicleIdentifierRegex);
    }
    
    private boolean isLicenseNoValid() {
        
        String licenseNo = licenseNoTextField.getText();
        if(licenseNo.isBlank()){
            return false;
        }
        String licenseNoRegex = "^[a-zA-Z0-9]+$";
        Pattern p = Pattern.compile(licenseNoRegex);
        Matcher matcher = p.matcher(licenseNoTextField.getText());
        
        return matcher.matches();
    }
    
    private boolean isBankAccountNoValid() {
        
        String bankAccountNo = bankAccountNoTextField.getText();
        bankAccountNo = bankAccountNo.replace(" ", "");
       
        try {
           Long.valueOf(bankAccountNo);
           return true;
        } catch (Exception e) {
           return false;
        }
    }
    
    private boolean isBankAccountNoSecValid() {
        String bankAccountNoSec = bankAccountNoTextField.getText();
        if(bankAccountNoSec.isBlank()){
            return true;
        }
        try {
           Long.valueOf(bankAccountNoSec);
           return true;
        } catch (Exception e) {
           return false;
        }
    }
    
    private boolean isHealthPlanBenificaryNoValid() {
        
        String healthPlanNo = healthPlanTextField.getText();
        healthPlanNo = healthPlanNo.replace(" ", "");
        try {
            Long.valueOf(healthPlanNo);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    private boolean isMedicalRecordNoValid() {
       
       String mrnNo = medicalRecordTextField.getText();
       mrnNo = mrnNo.replace(" ", "");
       
       try {
           Long.valueOf(mrnNo);
           return true;
       } catch (Exception e) {
           return false;
       }
    }
    
    private boolean isSsnValid() {
                
        String ssnRegex = "^(?!666|000|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0{4})\\d{4}$";
        Pattern p = Pattern.compile(ssnRegex);
        Matcher matcher = p.matcher(ssnTextField.getText());
        return matcher.matches();
    }
    
    private boolean isEmailIdValid() {
        
        if(emailTextField.getText().isBlank()){
            return false;
        }
        String emailRegex = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        return emailTextField.getText().matches(emailRegex);
    }
    
    private boolean isEmailIdSecValid() {
        
        if(emailTextSecField.getText().isBlank()){
            return true;
        }
        String emailRegex = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
        return emailTextSecField.getText().matches(emailRegex);
    }
    
    private boolean isUniqueIdentityValid(){
        
        if(uniqueIdentityTextField.getText().isBlank()){
            return false;
        }
        String uniqueIdentityRegex = "^[A-Za-z0-9]+[A-Za-z0-9]+$";
        return uniqueIdentityTextField.getText().matches(uniqueIdentityRegex);
    }
    
    private boolean isFaxNoValid() {
        
        String telephoneNo = faxNoTextField.getText();
        telephoneNo = telephoneNo.replace(" ", "");
        if(telephoneNo.length()!=10){
            return false;
        }
        try {
            Long.valueOf(telephoneNo);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    private boolean isDobValid() {
      
        if(dobTextField.getText().isBlank()){
            return false;
        }
        
        Date date = null;
        try {
           date = new SimpleDateFormat("dd/MM/yyyy").parse(dobTextField.getText().replace(" ", ""));
           System.err.println(date);
           if(date.after(new Date())){
               return false;
           }
           
        }catch (Exception e) {
            System.out.println(e.getMessage());
            return false;
        }
        return true;
    }
    
    private boolean isTelephoneNoValid() {
        
        String telephoneNo = telephoneNoTextField.getText();
        telephoneNo = telephoneNo.replace(" ", "");
        if(telephoneNo.length()!=10){
            return false;
        }
        try {
            Long.valueOf(telephoneNo);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    private boolean isTelephoneNoSecValid() {
        
        String telephoneNo = telephoneNoSecTextField.getText();
        telephoneNo = telephoneNo.replace(" ", "");
        if(telephoneNo.isBlank()){
            return true;
        }
        if(telephoneNo.length()!=10){
            return false;
        }
        try {
            Long.valueOf(telephoneNo);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
        
    private boolean isNameValid() {
        
        if(nameTextField.getText().isBlank()) {
            return false;
        }
        return nameTextField.getText().matches("^[a-zA-Z\\s]*$");
        
    }
    
    private boolean isGeographicDataValid(){
        
        if(geographicDataTextField.getText().isBlank()) {
            return false;
        }
            
        return geographicDataTextField.getText().matches("^[a-zA-Z0-9]+[A-Za-z0-9 -.]+$");
    }
    
    private void setPhoto(){
        
        ImageIcon photo = new ImageIcon(biometricsTextField.getText());
        Image photoResized = photo.getImage().getScaledInstance(photoLabel.getWidth(), photoLabel.getHeight(),4);
        photoLabel.setIcon(new ImageIcon(photoResized));
    }
    
    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        
        if(isDataValid()){
            setValuesToPerson();
            JOptionPane.showMessageDialog(this, "Person Information Saved Successfully");
        }else{
            JOptionPane.showMessageDialog(this, "Error Saving Person Information");
        }      
        
    }//GEN-LAST:event_SaveBtnActionPerformed

    private void uploadJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadJBtnActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("/"));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            biometricsTextField.setText(selectedFile.getAbsolutePath());
            setPhoto();
        }
    }//GEN-LAST:event_uploadJBtnActionPerformed

    private void nameTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextFieldKeyReleased
        // TODO add your handling code here:
        if(isNameValid()){
            nameTextField.setBackground(Color.WHITE);
        }else{
            nameTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_nameTextFieldKeyReleased

    private void dobTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dobTextFieldKeyReleased
        // TODO add your handling code here:
        if(isDobValid()){
            dobTextField.setBackground(Color.WHITE);
        }else{
            dobTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_dobTextFieldKeyReleased

    private void telephoneNoTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telephoneNoTextFieldKeyReleased
        // TODO add your handling code here:
        if(isTelephoneNoValid()){
            telephoneNoTextField.setBackground(Color.WHITE);
        }else{
            telephoneNoTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_telephoneNoTextFieldKeyReleased

    private void telephoneNoSecTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telephoneNoSecTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isTelephoneNoSecValid()){
            telephoneNoSecTextField.setBackground(Color.WHITE);
        }else{
            telephoneNoSecTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_telephoneNoSecTextFieldKeyReleased

    private void emailTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isEmailIdValid()){
            emailTextField.setBackground(Color.WHITE);
        }else{
            emailTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_emailTextFieldKeyReleased

    private void emailTextSecFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailTextSecFieldKeyReleased
        // TODO add your handling code here:
        
        if(isEmailIdSecValid()){
            emailTextSecField.setBackground(Color.WHITE);
        }else{
            emailTextSecField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_emailTextSecFieldKeyReleased

    private void medicalRecordTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_medicalRecordTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isMedicalRecordNoValid()){
            medicalRecordTextField.setBackground(Color.WHITE);
        }else{
            medicalRecordTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_medicalRecordTextFieldKeyReleased

    private void healthPlanTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_healthPlanTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isHealthPlanBenificaryNoValid()){
            healthPlanTextField.setBackground(Color.WHITE);
        }else{
            healthPlanTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_healthPlanTextFieldKeyReleased

    private void ssnTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ssnTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isSsnValid()){
            ssnTextField.setBackground(Color.WHITE);
        }else{
            ssnTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_ssnTextFieldKeyReleased

    private void bankAccountNoTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bankAccountNoTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isBankAccountNoValid()){
            bankAccountNoTextField.setBackground(Color.WHITE);
        }else{
            bankAccountNoTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_bankAccountNoTextFieldKeyReleased

    private void bankAccountNoSecTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bankAccountNoSecTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isBankAccountNoSecValid()){
            bankAccountNoSecTextField.setBackground(Color.WHITE);
        }else{
            bankAccountNoSecTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_bankAccountNoSecTextFieldKeyReleased

    private void vehicleIdentityTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vehicleIdentityTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isVehicleIdentifierValid()){
            vehicleIdentityTextField.setBackground(Color.WHITE);
        }else{
            vehicleIdentityTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_vehicleIdentityTextFieldKeyReleased

    private void deviceIdentityTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deviceIdentityTextFieldKeyReleased
        // TODO add your handling code here:
        if(isDeviceIdentifierValid()){
            deviceIdentityTextField.setBackground(Color.WHITE);
        }else{
            deviceIdentityTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_deviceIdentityTextFieldKeyReleased

    private void biometricsTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_biometricsTextFieldKeyReleased
        // TODO add your handling code here:
        if(isBiometricValid()){
            biometricsTextField.setBackground(Color.WHITE);
        }else{
            biometricsTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_biometricsTextFieldKeyReleased

    private void faxNoTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_faxNoTextFieldKeyReleased
        // TODO add your handling code here:
        if(isFaxNoValid()){
            faxNoTextField.setBackground(Color.WHITE);
        }else{
            faxNoTextField.setBackground(Color.RED);

        }
    }//GEN-LAST:event_faxNoTextFieldKeyReleased

    private void licenseNoTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_licenseNoTextFieldKeyReleased
        // TODO add your handling code here:
        if(isLicenseNoValid()){
            licenseNoTextField.setBackground(Color.WHITE);
        }else{
            licenseNoTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_licenseNoTextFieldKeyReleased

    private void ipAddressTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipAddressTextFieldKeyReleased
        // TODO add your handling code here:
        if(isIpAddressValid()){
            ipAddressTextField.setBackground(Color.WHITE);
        }else{
            ipAddressTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_ipAddressTextFieldKeyReleased

    private void linkedInTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_linkedInTextFieldKeyReleased
        // TODO add your handling code here:
        if(isLinkedInValid()){
            linkedInTextField.setBackground(Color.WHITE);
        }else{
            linkedInTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_linkedInTextFieldKeyReleased

    private void uniqueIdentityTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uniqueIdentityTextFieldKeyReleased
        // TODO add your handling code here:
        if(isUniqueIdentityValid()){
            uniqueIdentityTextField.setBackground(Color.WHITE);
        }else{
            uniqueIdentityTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_uniqueIdentityTextFieldKeyReleased

    private void geographicDataTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_geographicDataTextFieldKeyReleased
        // TODO add your handling code here:
        
        if(isGeographicDataValid()){
            geographicDataTextField.setBackground(Color.WHITE);
        }else{
            geographicDataTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_geographicDataTextFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SaveBtn;
    private javax.swing.JLabel bankAccountNoJLabel;
    private javax.swing.JLabel bankAccountNoSecJLabel;
    private javax.swing.JTextField bankAccountNoSecTextField;
    private javax.swing.JTextField bankAccountNoTextField;
    private javax.swing.JLabel biometricsJLabel1;
    private javax.swing.JTextField biometricsTextField;
    private javax.swing.JLabel createJLabel;
    private javax.swing.JLabel deviceIdentityJLabel;
    private javax.swing.JTextField deviceIdentityTextField;
    private javax.swing.JLabel dobJLabel;
    private javax.swing.JTextField dobTextField;
    private javax.swing.JLabel emailAddressJLabel;
    private javax.swing.JLabel emailAddressSecJLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JTextField emailTextSecField;
    private javax.swing.JLabel faxNoJLabel;
    private javax.swing.JTextField faxNoTextField;
    private javax.swing.JLabel geographicDataJLabel;
    private javax.swing.JTextField geographicDataTextField;
    private javax.swing.JLabel healthPlanJLabel;
    private javax.swing.JTextField healthPlanTextField;
    private javax.swing.JLabel ipAddressJLabel;
    private javax.swing.JTextField ipAddressTextField;
    private javax.swing.JLabel licenseNoJLabel;
    private javax.swing.JTextField licenseNoTextField;
    private javax.swing.JLabel linkedInJLabel;
    private javax.swing.JTextField linkedInTextField;
    private javax.swing.JLabel medicalRecordJLabel;
    private javax.swing.JTextField medicalRecordTextField;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel photoLabel;
    private javax.swing.JLabel ssnJLabel;
    private javax.swing.JTextField ssnTextField;
    private javax.swing.JLabel telephoneNoJLabel;
    private javax.swing.JLabel telephoneNoSecJLabel;
    private javax.swing.JTextField telephoneNoSecTextField;
    private javax.swing.JTextField telephoneNoTextField;
    private javax.swing.JLabel uniqueIdentityJLabel;
    private javax.swing.JTextField uniqueIdentityTextField;
    private javax.swing.JButton uploadJBtn;
    private javax.swing.JLabel vehicleIdentityJLabel;
    private javax.swing.JTextField vehicleIdentityTextField;
    // End of variables declaration//GEN-END:variables
}
